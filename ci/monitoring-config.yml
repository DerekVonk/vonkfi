# Comprehensive CI/CD Monitoring and Observability Configuration
# Provides monitoring, alerting, and observability for the CI/CD pipeline

monitoring:
  enabled: true
  version: "2.0"
  
  # Core metrics to track
  metrics:
    # Build and deployment metrics
    build:
      - name: "build_duration"
        description: "Time taken to build the application"
        unit: "seconds"
        threshold:
          warning: 300   # 5 minutes
          critical: 600  # 10 minutes
      
      - name: "build_success_rate"
        description: "Percentage of successful builds"
        unit: "percentage"
        threshold:
          warning: 95
          critical: 90
      
      - name: "build_size"
        description: "Size of build artifacts"
        unit: "MB"
        threshold:
          warning: 50
          critical: 100

    # Test execution metrics
    test:
      - name: "test_duration"
        description: "Total time for test execution"
        unit: "seconds"
        threshold:
          warning: 600   # 10 minutes
          critical: 1200 # 20 minutes
      
      - name: "test_success_rate"
        description: "Percentage of passing tests"
        unit: "percentage"
        threshold:
          warning: 95
          critical: 90
      
      - name: "test_coverage"
        description: "Code coverage percentage"
        unit: "percentage"
        threshold:
          warning: 80
          critical: 70
      
      - name: "flaky_test_rate"
        description: "Percentage of flaky tests"
        unit: "percentage"
        threshold:
          warning: 5
          critical: 10

    # Security metrics
    security:
      - name: "vulnerability_count"
        description: "Number of security vulnerabilities"
        unit: "count"
        threshold:
          critical_vulns: 0
          high_vulns: 3
          moderate_vulns: 10
      
      - name: "secret_scan_findings"
        description: "Number of potential secrets found"
        unit: "count"
        threshold:
          warning: 1
          critical: 5

    # Performance metrics
    performance:
      - name: "memory_usage"
        description: "Peak memory usage during CI"
        unit: "MB"
        threshold:
          warning: 4096  # 4GB
          critical: 6144 # 6GB
      
      - name: "cpu_usage"
        description: "Peak CPU usage during CI"
        unit: "percentage"
        threshold:
          warning: 80
          critical: 95

  # Data collection configuration
  collection:
    # Metrics collection interval
    interval: 30 # seconds
    
    # Data retention
    retention:
      metrics: "30d"
      logs: "7d"
      artifacts: "30d"
    
    # Export configuration
    exporters:
      prometheus:
        enabled: true
        endpoint: "/metrics"
        port: 9090
      
      json:
        enabled: true
        file: "./monitoring/metrics.json"
      
      influxdb:
        enabled: false
        url: "${INFLUXDB_URL}"
        database: "vonkfi_ci"

  # Alerting configuration
  alerting:
    enabled: true
    
    # Alert channels
    channels:
      slack:
        enabled: true
        webhook: "${SLACK_WEBHOOK_URL}"
        channel: "#ci-cd-alerts"
        mention_on_critical: true
        
      email:
        enabled: false
        recipients:
          - "devops@vonkfi.com"
          - "security@vonkfi.com"
        
      teams:
        enabled: false
        webhook: "${TEAMS_WEBHOOK_URL}"
    
    # Alert rules
    rules:
      # Critical alerts (immediate notification)
      critical:
        - name: "Build Failure"
          condition: "build_success_rate < 90"
          message: "üö® Critical: Build success rate dropped below 90%"
          
        - name: "Security Vulnerabilities"
          condition: "vulnerability_count.critical > 0 OR secret_scan_findings > 5"
          message: "üîí Critical: Security vulnerabilities or secrets detected"
          
        - name: "System Resource Exhaustion"
          condition: "memory_usage > 6144 OR cpu_usage > 95"
          message: "üíæ Critical: System resources exhausted"
      
      # Warning alerts (batched notifications)
      warning:
        - name: "Slow Build"
          condition: "build_duration > 300"
          message: "‚è∞ Warning: Build taking longer than expected"
          
        - name: "Test Coverage Drop"
          condition: "test_coverage < 80"
          message: "üìä Warning: Test coverage below threshold"
          
        - name: "Flaky Tests"
          condition: "flaky_test_rate > 5"
          message: "üß™ Warning: High flaky test rate detected"

  # Dashboard configuration
  dashboard:
    enabled: true
    
    # Dashboard sections
    sections:
      overview:
        title: "CI/CD Overview"
        widgets:
          - type: "metric"
            title: "Build Success Rate"
            metric: "build_success_rate"
            visualization: "gauge"
          
          - type: "metric"
            title: "Test Coverage"
            metric: "test_coverage"
            visualization: "gauge"
          
          - type: "metric"
            title: "Security Score"
            metric: "security_score"
            visualization: "gauge"
      
      performance:
        title: "Performance Metrics"
        widgets:
          - type: "chart"
            title: "Build Duration Trend"
            metric: "build_duration"
            visualization: "line"
            timeframe: "7d"
          
          - type: "chart"
            title: "Test Duration Trend"
            metric: "test_duration"
            visualization: "line"
            timeframe: "7d"
          
          - type: "chart"
            title: "Resource Usage"
            metrics: ["memory_usage", "cpu_usage"]
            visualization: "area"
            timeframe: "24h"
      
      security:
        title: "Security Dashboard"
        widgets:
          - type: "metric"
            title: "Vulnerabilities"
            metric: "vulnerability_count"
            visualization: "number"
          
          - type: "chart"
            title: "Security Trend"
            metric: "vulnerability_count"
            visualization: "bar"
            timeframe: "30d"
      
      quality:
        title: "Code Quality"
        widgets:
          - type: "metric"
            title: "Test Success Rate"
            metric: "test_success_rate"
            visualization: "gauge"
          
          - type: "chart"
            title: "Coverage Trend"
            metric: "test_coverage"
            visualization: "line"
            timeframe: "30d"

  # Health checks
  health_checks:
    enabled: true
    
    # System health endpoints
    endpoints:
      - name: "ci_system"
        url: "${CI_HEALTH_ENDPOINT}"
        interval: 60 # seconds
        timeout: 10  # seconds
        
      - name: "test_database"
        url: "${TEST_DB_HEALTH_ENDPOINT}"
        interval: 120
        timeout: 15
        
      - name: "artifact_storage"
        url: "${ARTIFACT_STORAGE_HEALTH_ENDPOINT}"
        interval: 300
        timeout: 20
    
    # Health check alerts
    alerts:
      consecutive_failures: 3
      notification_channels: ["slack"]

  # Logging configuration
  logging:
    enabled: true
    level: "info"
    
    # Log aggregation
    aggregation:
      enabled: true
      format: "json"
      
    # Log shipping
    shipping:
      elasticsearch:
        enabled: false
        url: "${ELASTICSEARCH_URL}"
        index: "vonkfi-ci-logs"
      
      cloudwatch:
        enabled: false
        log_group: "/aws/lambda/vonkfi-ci"
        
      file:
        enabled: true
        path: "./logs/ci-monitoring.log"
        max_size: "100MB"
        rotation: "daily"

  # Integration configuration
  integrations:
    # GitHub integration
    github:
      enabled: true
      token: "${GITHUB_TOKEN}"
      webhook_secret: "${GITHUB_WEBHOOK_SECRET}"
      events:
        - "push"
        - "pull_request"
        - "workflow_run"
    
    # GitLab integration
    gitlab:
      enabled: true
      token: "${GITLAB_TOKEN}"
      webhook_secret: "${GITLAB_WEBHOOK_SECRET}"
      events:
        - "pipeline"
        - "job"
        - "merge_request"
    
    # Third-party tools
    external_tools:
      sonarqube:
        enabled: false
        url: "${SONARQUBE_URL}"
        token: "${SONARQUBE_TOKEN}"
        
      codecov:
        enabled: true
        token: "${CODECOV_TOKEN}"
        
      snyk:
        enabled: false
        token: "${SNYK_TOKEN}"

  # Report generation
  reports:
    enabled: true
    
    # Report types
    types:
      daily:
        enabled: true
        format: "html"
        recipients: ["team@vonkfi.com"]
        include:
          - "build_summary"
          - "test_summary"
          - "security_summary"
          - "performance_metrics"
      
      weekly:
        enabled: true
        format: "pdf"
        recipients: ["management@vonkfi.com"]
        include:
          - "trend_analysis"
          - "quality_metrics"
          - "security_posture"
          - "recommendations"
      
      incident:
        enabled: true
        format: "html"
        auto_generate: true
        triggers:
          - "critical_alert"
          - "build_failure"
          - "security_incident"

# Environment-specific overrides
environments:
  development:
    monitoring:
      collection:
        interval: 60
      alerting:
        enabled: false
      dashboard:
        enabled: true
  
  staging:
    monitoring:
      collection:
        interval: 30
      alerting:
        enabled: true
        channels:
          slack:
            channel: "#staging-alerts"
  
  production:
    monitoring:
      collection:
        interval: 15
      alerting:
        enabled: true
        rules:
          critical:
            - name: "Production Build Failure"
              condition: "build_success_rate < 95"
              message: "üö® URGENT: Production build failure detected"